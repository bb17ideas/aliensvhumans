<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instantiate Projectile Properties
vx = 0;
vy = 0;
movementSpeedMax = 1;

dmg = 0;
explosionColor = undefined;

magnetizationMaxDistance = 500; // maximum field range
magnetizationForce = 0.01; // field pull force
magnetizationEnergy = 0; // energy added to field upon collision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Movement
// if near enough, projectile will be pulled by magnetic field
if(instance_exists(obj_magneticField))
{
    var magDistance = point_distance(obj_magneticField.x, obj_magneticField.y, x, y);
    if(magDistance &lt;= magnetizationMaxDistance)
    {
        // find x and y displacement from projectile to magnetic field
        var magDisplacementX = obj_magneticField.x - x;
        var magDisplacementY = obj_magneticField.y - y;
        
        // adjust projectile speed according to magnetic force vectors
        var magneticPull = (1 - (magDistance / magnetizationMaxDistance)) * magnetizationForce;
        vx += ((magDisplacementX / magDistance) * magneticPull);
        vy += ((magDisplacementY / magDistance) * magneticPull);
    }
}

// if necessary, clamp speed
var currentSpeed = sqrt(sqr(vx) + sqr(vy));
if(currentSpeed &gt; movementSpeedMax)
{
    // normalize speed vector and multiply by maximum permitted speed
    vx = ((vx/currentSpeed) * movementSpeedMax);
    vy = ((vy/currentSpeed) * movementSpeedMax);
}

// move projectile
x += vx;
y += vy;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Collision
// base collision
if(instance_place(x, y, obj_wall))
{
    obj_baseManager.hp -= dmg;
    effect_create_above(ef_flare, x, y, 0, explosionColor);
    instance_destroy();
}
// forcefield collision
if(instance_place(x, y, obj_forcefield) &amp;&amp; obj_forcefield.activated)
{
    effect_create_above(ef_flare, x, y, 0, explosionColor);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Self
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
